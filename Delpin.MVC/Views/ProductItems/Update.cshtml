@model Delpin.MVC.Dto.v1.ProductItems.UpdateProductItemDto

@{
    ViewData["Title"] = "Opdater";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Opdater produktlinje</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Update">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsAvailable" /> @Html.DisplayNameFor(model => model.IsAvailable)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="LastService" class="control-label"></label>
                <input asp-for="LastService" class="form-control" />
                <span asp-validation-for="LastService" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PostalCode" class="control-label"></label>
                <input asp-for="PostalCode" class="form-control" />
                <span asp-validation-for="PostalCode" class="text-danger"></span>
            </div>
            <div class="form-group" style="display: inline">
                <input asp-route-productId="@ViewData["ProductId"]" type="submit" value="Gem" class="btn btn-primary btn-delpin" />
            </div>
            <div style="display: inline">
                <a asp-controller="Products" asp-action="Details" asp-route-id="@ViewData["ProductId"]" class="btn btn-secondary btn-delpin">Tilbage</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
