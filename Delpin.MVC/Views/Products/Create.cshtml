@using Delpin.MVC.Dto.v1.ProductGroups
@model Delpin.Mvc.Models.Products.CreateProductViewModel

@{
    ViewData["Title"] = "Opret";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Opret produkt</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductGroupId" class="control-label"></label>
                <select asp-for="ProductGroupId" class="form-control">
                    @if (!string.IsNullOrEmpty((string)ViewData["ProductGroupId"]) && !string.IsNullOrEmpty((string)ViewData["ProductGroupName"]))
                    {

                        <option value="@ViewData["ProductGroupId"]">@ViewData["ProductGroupName"]</option>
                    }
                    else
                    {
                        @foreach (var group in (List<ProductGroupDto>)ViewData["Groups"])
                        {
                            <option value="@group.Id">@group.Name</option>
                        }
                    }
                </select>
                <span asp-validation-for="ProductGroupId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>
                <input asp-for="Image" type="file" name="Image" class="form-control-file" required />
                <br />
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Gem" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Tilbage til oversigt</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
