@using Delpin.MVC.Dto.v1.Products
@model Delpin.MVC.Dto.v1.Rentals.UpdateRentalDto

@{
    ViewData["Title"] = "Rediger";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Rediger</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Update">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CustomerId" class="control-label"></label>
                <input asp-for="CustomerId" class="form-control" />
                <span asp-validation-for="CustomerId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StartDate" class="control-label"></label>
                <input asp-for="StartDate" class="form-control" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDate" class="control-label"></label>
                <input asp-for="EndDate" class="form-control" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PostalCode" class="control-label"></label>
                <input asp-for="PostalCode" class="form-control" />
                <span asp-validation-for="PostalCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                @for (int i = 0; i < Model.RentalLines.Count; i++)
                {
                    <input type="hidden" value="@Model.RentalLines[i]" id="@($"RentalLine_{i}")" name="@($"RentalLine{i}")" />
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Gem" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@if (ViewData["RentalProducts"] != null)
{
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Produkt</th>
                <th scope="col">Pris pr. dag</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.RentalLines)
            {

                ProductDto product = (ViewData["RentalProducts"] as List<ProductDto>)?
                    .FirstOrDefault(x => Model.RentalLines.Any(p => p.ProductItemId == item.ProductItemId));

                <tr>
                    <th>@item.ProductItemId</th>
                    <td>@product.Name</td>
                    <td>@($"{product.Price:#.##}"),- DKK</td>
                </tr>
            }
        </tbody>
    </table>
}


<div>
    <a asp-action="Index" class="btn btn-secondary">Tilbage</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
